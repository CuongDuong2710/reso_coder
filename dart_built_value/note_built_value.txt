_ Run build value
flutter packages pub run build_runner watch

_ Snippet for built value in dart.json (File > Preferences -> User Snippets)

{
    "Built Value": {
        "prefix": "blt",
        "body": [
            "abstract class ${1} implements Built<${1}, ${1}Builder> {",
            "\t${0:// fields go here}",
            "",
            "\t${1}._();",
            "",
            "\tfactory ${1}([updates(${1}Builder b)]) = _$${1};",
            "}"
        ],
        "description": "Built Value Class"
    },
    "Built Value Serializable": {
        "prefix": "blts",
        "body": [
            "abstract class ${1} implements Built<${1}, ${1}Builder> {",
            "\t${0:// fields go here}",
            "",
            "\t${1}._();",
            "",
            "\tfactory ${1}([updates(${1}Builder b)]) = _$${1};",
            "",
            "\tString toJson() {",
            "\t\treturn json.encode(serializers.serializeWith(${1}.serializer, this));",
            "\t}",
            "",
            "\tstatic ${1} fromJson(String jsonString) {",
            "\t\treturn serializers.deserializeWith(${1}.serializer, json.decode(jsonString));",
            "\t}",
            "",
            "\tstatic Serializer<${1}> get serializer => _$${1/(^[A-z]{1})/${1:/downcase}/}Serializer;",
            "}"
        ],
        "description": "Serializable Built Value Class"
    },
    "Built Value Header": {
        "prefix": "blth",
        "body": [
            "library ${1};",
            "",
            "import 'dart:convert';",
            "",
            "import 'package:built_collection/built_collection.dart';",
            "import 'package:built_value/built_value.dart';",
            "import 'package:built_value/serializer.dart';",
            "",
            "part '${1}.g.dart';",
        ],
        "description": "Built Value Imports and File Header"
    },
}

_ Format on Save (File -> Settings -> Format on Save)

_ Key Bindings:

https://dartcode.org/docs/key-bindings/

Editor Key Bindings
Ctrl+T (macOS: Cmd+T) - Show Workspace Symbols
Ctrl+Shift+O (macOS: Cmd+Shift+O) - Show Document Symbols
Ctrl+Shift+P (macOS: Cmd+Shift+P) - Open Command Palette
Ctrl+Space - Open Code Completion
Ctrl+. (macOS: Cmd+.) - Open Quick Fixes
F2 - Rename Symbol
Shift+Alt+F (macOS: Cmd+Shift+F) - Format Document
F12 - Go To Definition
Shift+F12 - Find References
Alt+Shift+O - Organize Directives
F4 - Show Type Hierarchy
Debug Key Bindings
F5 - Start Debugging
Ctrl+F5 - Start Without Debugging
Shift+F5 - Stop Debugging
Ctrl+Shift+F5 (macOS: Cmd+Shift+F5) - Restart Debugging (Hot Reload when debugging Flutter apps)
Ctrl+F5 - Hot Restart (when debugging Flutter apps and in a debug session)
F9 - Toggle Breakpoint
F10 - Step Over
F11 - Step In
Shift+F11 - Step Out
Ctrl+ , - open search settings
...


=======================
_ Install 'Bloc' plugin

_ Shortcut key: enter 'bloc'